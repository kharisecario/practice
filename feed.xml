<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>KS Playground</title>
    <link href="https://kharisecario.github.io/practice/feed.xml" rel="self" />
    <link href="https://kharisecario.github.io/practice" />
    <updated>1970-01-01T08:00:00+08:00</updated>
    <author>
        <name>Khari Secario</name>
    </author>
    <id>https://kharisecario.github.io/practice</id>

    <entry>
        <title>step01</title>
        <author>
            <name>Khari Secario</name>
        </author>
        <link href="https://kharisecario.github.io/practice/step01.html"/>
        <id>https://kharisecario.github.io/practice/step01.html</id>

        <updated>2020-09-18T16:00:09+08:00</updated>
            <summary>
                <![CDATA[
                     MathJax.Hub.Config({ tex2jax: { inlineMath: [ ['$','$'], ["\\(","\\)"] ], displayMath: [ ['$$','$$'], ["\\[","\\]"] ], processEscapes: true, processEnvironments: true }, // Center justify equations in code and markdown cells. Elsewhere // we use CSS to left justify single line equations in code cells. displayAlign: 'center', "HTML-CSS":&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>
<script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
</p>
<!-- Custom stylesheet, it must be in the same directory as the html file -->
<p></p>
<!-- Loading mathjax macro -->
<p> </p>
<!-- Load mathjax -->
<p>
<script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js?config=TeX-AMS_HTML"></script>
</p>
<!-- MathJax configuration -->
<p>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
        tex2jax: {
            inlineMath: [ ['$','$'], ["\\(","\\)"] ],
            displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
            processEscapes: true,
            processEnvironments: true
        },
        // Center justify equations in code and markdown cells. Elsewhere
        // we use CSS to left justify single line equations in code cells.
        displayAlign: 'center',
        "HTML-CSS": {
            styles: {'.MathJax_Display': {"margin": 0}},
            linebreaks: { automatic: true }
        }
    });
    </script>
</p>
<!-- End of mathjax configuration -->
<div id="notebook" class="border-box-sizing" tabindex="-1">
<div id="notebook-container" class="container">
<div class="cell border-box-sizing text_cell rendered">
<div class="prompt input_prompt"> </div>
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Ver 1.1<br>Updated on Thr Apr 23 2020<br>Changelog:</p>
<ul>
<li>update the way dumping frame</li>
</ul>
<p>@author: khari secario</p>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [ ]:</div>
<div class="inner_cell">
<div class="input_area">
<div class=" highlight hl-ipython3">
<pre><span class="c1"># -*- coding: utf-8 -*-</span>

<span class="kn">import</span> <span class="nn">os</span>
<span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">'mkdir -p frameoutput'</span><span class="p">)</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">200</span><span class="p">,</span><span class="mi">2</span><span class="p">):</span>   <span class="c1">#change it based on the steps in gromacs</span>
    <span class="nb">print</span> <span class="p">(</span><span class="s2">"Extracting frame </span><span class="si">%s</span><span class="s2">...</span><span class="se">\n</span><span class="s2">"</span> <span class="o">%</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s2">"echo 2 | gmx trjconv -pbc mol -f vlf-nve.trr -s mdtopol_nve.tpr -o frameoutput/frame</span><span class="si">%s</span><span class="s2">.pdb -b </span><span class="si">%s</span><span class="s2"> -dump </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">zfill</span><span class="p">(</span><span class="mi">3</span><span class="p">),</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">zfill</span><span class="p">(</span><span class="mi">3</span><span class="p">),</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">zfill</span><span class="p">(</span><span class="mi">3</span><span class="p">)))</span>
    
<span class="nb">print</span> <span class="p">(</span><span class="s2">"Job finished!"</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>step01-splitframe</title>
        <author>
            <name>Khari Secario</name>
        </author>
        <link href="https://kharisecario.github.io/practice/step01-splitframe.html"/>
        <id>https://kharisecario.github.io/practice/step01-splitframe.html</id>

        <updated>2020-09-18T16:00:09+08:00</updated>
            <summary>
                <![CDATA[
                    Ver 1.1 Updated on Thr Apr 23 2020 Changelog: @author: khari secario # -*- coding: utf-8 -*-import osos.system(&#39;mkdir -p frameoutput&#39;)for i in range (0,200,2): #change it based on the steps in gromacs print (&quot;Extracting frame %s...\n&quot; % str(i+1)) os.system(&quot;echo 2 | gmx trjconv -pbc mol&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Ver 1.1<br>Updated on Thr Apr 23 2020<br>Changelog:  </p>
<ul>
<li>update the way dumping frame  </li>
</ul>
<p>@author: khari secario</p>
<pre><code class="language-python"># -*- coding: utf-8 -*-

import os
os.system(&#39;mkdir -p frameoutput&#39;)

for i in range (0,200,2):   #change it based on the steps in gromacs
    print (&quot;Extracting frame %s...\n&quot; % str(i+1))
    os.system(&quot;echo 2 | gmx trjconv -pbc mol -f vlf-nve.trr -s mdtopol_nve.tpr -o frameoutput/frame%s.pdb -b %s -dump %s&quot; % (str(i+1).zfill(3), str(i).zfill(3), str(i+1).zfill(3)))

print (&quot;Job finished!&quot;)</code></pre>

            ]]>
        </content>
    </entry>
</feed>
