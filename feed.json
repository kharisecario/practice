{
    "version": "https://jsonfeed.org/version/1",
    "title": "KS Playground",
    "description": "",
    "home_page_url": "https://kharisecario.github.io/practice",
    "feed_url": "https://kharisecario.github.io/practice/feed.json",
    "user_comment": "",
    "author": {
        "name": "Khari Secario"
    },
    "items": [
        {
            "id": "https://kharisecario.github.io/practice/step01.html",
            "url": "https://kharisecario.github.io/practice/step01.html",
            "title": "step01",
            "summary": " MathJax.Hub.Config({ tex2jax: { inlineMath: [ ['$','$'], [\"\\\\(\",\"\\\\)\"] ], displayMath: [ ['$$','$$'], [\"\\\\[\",\"\\\\]\"] ], processEscapes: true, processEnvironments: true }, // Center justify equations in code and markdown cells. Elsewhere // we use CSS to left justify single line equations in code cells. displayAlign: 'center', \"HTML-CSS\":&hellip;",
            "content_html": "<p>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js\"></script>\n</p>\n<!-- Custom stylesheet, it must be in the same directory as the html file -->\n<p></p>\n<!-- Loading mathjax macro -->\n<p> </p>\n<!-- Load mathjax -->\n<p>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js?config=TeX-AMS_HTML\"></script>\n</p>\n<!-- MathJax configuration -->\n<p>\n<script type=\"text/x-mathjax-config\">\n    MathJax.Hub.Config({\n        tex2jax: {\n            inlineMath: [ ['$','$'], [\"\\\\(\",\"\\\\)\"] ],\n            displayMath: [ ['$$','$$'], [\"\\\\[\",\"\\\\]\"] ],\n            processEscapes: true,\n            processEnvironments: true\n        },\n        // Center justify equations in code and markdown cells. Elsewhere\n        // we use CSS to left justify single line equations in code cells.\n        displayAlign: 'center',\n        \"HTML-CSS\": {\n            styles: {'.MathJax_Display': {\"margin\": 0}},\n            linebreaks: { automatic: true }\n        }\n    });\n    </script>\n</p>\n<!-- End of mathjax configuration -->\n<div id=\"notebook\" class=\"border-box-sizing\" tabindex=\"-1\">\n<div id=\"notebook-container\" class=\"container\">\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\"> </div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Ver 1.1<br>Updated on Thr Apr 23 2020<br>Changelog:</p>\n<ul>\n<li>update the way dumping frame</li>\n</ul>\n<p>@author: khari secario</p>\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n<div class=\"input_area\">\n<div class=\" highlight hl-ipython3\">\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s1\">'mkdir -p frameoutput'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">200</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">):</span>   <span class=\"c1\">#change it based on the steps in gromacs</span>\n    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Extracting frame </span><span class=\"si\">%s</span><span class=\"s2\">...</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s2\">\"echo 2 | gmx trjconv -pbc mol -f vlf-nve.trr -s mdtopol_nve.tpr -o frameoutput/frame</span><span class=\"si\">%s</span><span class=\"s2\">.pdb -b </span><span class=\"si\">%s</span><span class=\"s2\"> -dump </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">zfill</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">zfill</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">zfill</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)))</span>\n    \n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Job finished!\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
            "author": {
                "name": "Khari Secario"
            },
            "tags": [
            ],
            "date_published": "2020-09-18T16:00:09+08:00",
            "date_modified": "2020-09-18T16:00:09+08:00"
        },
        {
            "id": "https://kharisecario.github.io/practice/step01-splitframe.html",
            "url": "https://kharisecario.github.io/practice/step01-splitframe.html",
            "title": "step01-splitframe",
            "summary": "Ver 1.1 Updated on Thr Apr 23 2020 Changelog: @author: khari secario # -*- coding: utf-8 -*-import osos.system(&#39;mkdir -p frameoutput&#39;)for i in range (0,200,2): #change it based on the steps in gromacs print (&quot;Extracting frame %s...\\n&quot; % str(i+1)) os.system(&quot;echo 2 | gmx trjconv -pbc mol&hellip;",
            "content_html": "<p>Ver 1.1<br>Updated on Thr Apr 23 2020<br>Changelog:  </p>\n<ul>\n<li>update the way dumping frame  </li>\n</ul>\n<p>@author: khari secario</p>\n<pre><code class=\"language-python\"># -*- coding: utf-8 -*-\n\nimport os\nos.system(&#39;mkdir -p frameoutput&#39;)\n\nfor i in range (0,200,2):   #change it based on the steps in gromacs\n    print (&quot;Extracting frame %s...\\n&quot; % str(i+1))\n    os.system(&quot;echo 2 | gmx trjconv -pbc mol -f vlf-nve.trr -s mdtopol_nve.tpr -o frameoutput/frame%s.pdb -b %s -dump %s&quot; % (str(i+1).zfill(3), str(i).zfill(3), str(i+1).zfill(3)))\n\nprint (&quot;Job finished!&quot;)</code></pre>\n",
            "author": {
                "name": "Khari Secario"
            },
            "tags": [
            ],
            "date_published": "2020-09-18T16:00:09+08:00",
            "date_modified": "2020-09-18T16:00:09+08:00"
        }
    ]
}
